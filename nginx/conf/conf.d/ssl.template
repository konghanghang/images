# 设置 HTTP 服务器，将所有 HTTP 请求都重定向到 HTTPS
server {
    listen 80;
    server_name _;

    # 重定向所有 HTTP 请求到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# 设置 HTTPS 服务器
server {
    listen 443 ssl http2;
    server_name _;

    # SSL 证书和密钥文件的路径
    ssl_certificate         /etc/letsencrypt/ssl/xx/fullchain.pem; # 证书文件，通常不区分扩展名，证书文件需要使用fullchain（全SSL证书链）
    ssl_certificate_key     /etc/letsencrypt/ssl/xx/privkey.pem; # 私钥文件，通常不区分扩展名

    # 可选：设置 SSL 会话缓存
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 可选：设置 SSL 协议和加密算法
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # 可选：开启 OCSP Stapling，提高 SSL 握手性能
    ssl_stapling on;
    ssl_stapling_verify on;

    # 可选：设置 HSTS（HTTP Strict Transport Security）头
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

    # 可选：设置 Content Security Policy（内容安全策略）头
    # add_header Content-Security-Policy "default-src 'self';" always;

    # 可选：设置访问日志
    access_log /var/log/nginx/test.access.log;
    error_log /var/log/nginx/test.error.log;

    # 设置静态文件目录和 index 文件
    root /var/www/html;
    index index.html;

    # 可选：其他 Nginx 配置指令，如反向代理等
    # location /api/ {
    #     proxy_pass http://backend_server;
    # }

    # 可选：禁止特定文件的访问
    # location ~* \.(log|ini)$ {
    #     deny all;
    # }

    # 可选：设置其它反向代理或者应用配置等
    # location / {
    #     try_files $uri $uri/ /index.html;
    # }
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_ignore_client_abort on;
        # proxy_pass http://127.0.0.1;
        root /usr/share/nginx/html;
        index index.html index.htm;
    }
}

server {
    listen                          80;
    listen                          [::]:80;
    server_name                     _;
    return 301                      https://$host$request_uri;
}

server {
    # ttp2 on; 这条指令出现在1.25.1版本中 https://nginx.org/en/docs/http/ngx_http_v2_module.html
    #listen                         127.0.0.1:8003 ssl proxy_protocol;
    #http2                          on;
    #listen                         8443 ssl http2 proxy_protocol;
    listen                          443 ssl http2 ;
    listen                          [::]:443 ssl http2;
    # 修改server_name为自己的域名
    server_name                     _;
    index                           index.php index.html index.htm;
    # 这里根据自己情况配置wp网页所在的路径，docker内部的路径
    root                            /wp/html;
    # 隐藏 nginx 版本.
    server_tokens                   off;
    # 隐藏 PHP 版本
    fastcgi_hide_header             X-Powered-By;
    proxy_hide_header               X-Powered-By;
    client_max_body_size            75M;

    # logging
    access_log                      /var/log/nginx/wp.access.log json;
    error_log                       /var/log/nginx/wp.error.log;

    # some security headers ( optional )
    add_header                      X-Frame-Options "SAMEORIGIN" always;
    add_header                      X-XSS-Protection "1; mode=block" always;
    add_header                      X-Content-Type-Options "nosniff" always;
    add_header                      Referrer-Policy "no-referrer-when-downgrade" always;
    add_header                      Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    # 设置获取真实ip
    set_real_ip_from                127.0.0.1;
    set_real_ip_from                192.168.0.0/24;
    #real_ip_header                  proxy_protocol;
    # 设置使用X-Forwarded-For作为真实的客户端IP地址
    real_ip_header                  X-Forwarded-For;
    real_ip_recursive               on;

    # ======================设置SSL start======================
    # 证书文件，通常不区分扩展名，证书文件需要使用fullchain（全SSL证书链）
    ssl_certificate                 /etc/letsencrypt/ssl/xx/fullchain.pem;
    # 私钥文件，通常不区分扩展名
    ssl_certificate_key             /etc/letsencrypt/ssl/xx/privkey.pem;
    ssl_protocols                   TLSv1.2 TLSv1.3;
    ssl_ciphers                     TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
    # 设置 SSL 会话缓存
    ssl_session_timeout             1d;
    ssl_session_cache               shared:SSL:10m;
    ssl_session_tickets             off;
    # 开启 OCSP Stapling，提高 SSL 握手性能
    ssl_stapling                    on;
    ssl_stapling_verify             on;
    ssl_trusted_certificate         /etc/letsencrypt/ssl/xx/fullchain.pem;
    # ======================设置SSL end======================

    location ~* ^/xmlrpc\.php$ {
        deny                        all;
    }
    location ~ /\.ht {
        deny                        all;
    }
    location ~* ^/wp-login\.php$ {
        deny                        all;
    }

    location / {
        try_files                   $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files                   $uri = 404;
        fastcgi_split_path_info     ^(.+\.php)(/.+)$;
        # 地址改成自己的
        fastcgi_pass                wp:9000;
        fastcgi_index               index.php;
        include                     fastcgi_params;
        #fastcgi_param               SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param               SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        fastcgi_param               DOCUMENT_ROOT /var/www/html;
    }

    error_page                      404 403 500 502 503 504 /404.html;
    location = /404.html {
        root                        /usr/share/nginx/html;
        internal;
    }

    location = /favicon.ico {
        log_not_found               off;
        access_log                  off;
    }

    location = /favicon.svg {
        log_not_found               off;
        access_log                  off;
    }

    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        expires                     max;
        log_not_found               off;
        access_log                  off;
    }
}